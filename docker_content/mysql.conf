input {
  jdbc {
    jdbc_driver_library => "/home/mysql-connector-java-5.1.47-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://db.misc.iastate.edu:3306/cyads_processor"
    jdbc_user => ""
    jdbc_password => ""
    jdbc_page_size =>"10000"
    jdbc_paging_enabled => true

    statement => "SELECT batch.id as batch_id, Date(FROM_UNIXTIME(batch.start_timestamp)) as date_started, Time(FROM_UNIXTIME(batch.start_timestamp)) as time_started,
    Date(FROM_UNIXTIME(batch.completed_timestamp)) as date_completed, Time(FROM_UNIXTIME(batch.completed_timestamp)) as time_completed,
    locations.state_name, locations.state_symbol, batch.total_bots, batch.server_hostname, batch.server_container, batch.external_ip,
    batch.status, batch.total_requests, batch.total_ads_found, batch.video_list_size,
    watchlog.ad_duration, watchlog.ad_skip_duration, watchlog.ad_source, watchlog.ad_system, watchlog.attempt, bots.name as bot_name,
    Date(FROM_UNIXTIME(watchlog.request_timestamp)) as video_request_date, time(FROM_UNIXTIME(watchlog.request_timestamp)) as video_request_time,

    watched_video.url as watched_video_url,  watched_video.title as watched_video_title, watched_video.description as watched_video_description,
    watched_video.keywords as watched_video_keywords, watched_video.watched_as_ad as watched_video_watched_as_ad_count,
    watched_video.watched_as_video as watched_video_watched_as_video_count, watch_video_category.cat_id as watched_video_youtube_category_id,
    watch_video_category.name as watched_video_youtube_category_name,


    watched_ad.url as watched_ad_url,  watched_ad.title as watched_ad_title, watched_ad.description as watched_ad_description,
    watched_ad.keywords as watched_ad_keywords, watched_ad.watched_as_ad as watched_ad_watched_as_ad_count,
    watched_ad.watched_as_video as watched_ad_watched_as_video_count, watch_ad_category.cat_id as watched_ad_youtube_category_id,
    watch_ad_category.name as watched_ad_youtube_category_name

    FROM cyads_processor.processor_batch as batch
    Join cyads_processor.processor_locations as locations on batch.location_id = locations.id
    Join cyads_processor.processor_ad_found_watchlog as watchlog on batch.id = watchlog.batch_id
    Join cyads_processor.processor_videos as watched_video on watchlog.video_watched_id = watched_video.id
    Join cyads_processor.processor_videos as watched_ad on watchlog.ad_video_id = watched_ad.id
    Join cyads_processor.processor_bots as bots on watchlog.bot_id = bots.id
    Join cyads_processor.processor_categories as watch_video_category on watch_video_category.id = watched_video.category_id
    Join cyads_processor.processor_categories as watch_ad_category on watch_ad_category.id = watched_ad.category_id

    where batch.processed = 1

    "
      }
    }


    filter {
      mutate {
        gsub => [ "watched_video_keywords", "b\"", "" ]
        gsub => [ "watched_video_keywords", "b'", ""]
        gsub => [ "watched_video_keywords", "[\\]", ""]
        gsub => [ "watched_video_keywords", "\"", ""]
        gsub => [ "watched_video_keywords", "\[", ""]
        gsub => [ "watched_video_keywords", "\]", ""]
        gsub => [ "watched_video_keywords", "'", ""]

        gsub => [ "watched_ad_keywords", "b\"", "" ]
        gsub => [ "watched_ad_keywords", "b'", ""]
        gsub => [ "watched_ad_keywords", "[\\]", ""]
        gsub => [ "watched_ad_keywords", "\"", ""]
        gsub => [ "watched_ad_keywords", "\[", ""]
        gsub => [ "watched_ad_keywords", "\]", ""]
        gsub => [ "watched_ad_keywords", "'", ""]

        gsub => [ "watched_video_title", "b'", ""]
        gsub => [ "watched_video_title", "b\"", ""]

        gsub => [ "watched_ad_title", "b'", ""]
        gsub => [ "watched_ad_title", "b\"", ""]

        gsub => [ "watched_video_youtube_category_name", "b'", ""]
        gsub => [ "watched_video_youtube_category_name", "b\"", ""]

        gsub => [ "watched_ad_youtube_category_name", "b'", ""]
        gsub => [ "watched_ad_youtube_category_name", "b\"", ""]


        gsub => [ "watched_video_description", "b'", ""]
        gsub => [ "watched_video_description", "b\"", ""]
        gsub => [ "watched_ad_description", "b'", ""]
        gsub => [ "watched_ad_description", "b\"", ""]
      }
      ruby {
        code => '
          video_keywords = event.get("watched_video_keywords").split(", ")
          event.set("watched_video_keywords_array",video_keywords)
          ad_keywords = event.get("watched_ad_keywords").split(", ")
          event.set("watched_ad_keywords_array",ad_keywords)
        '
      }
      mutate {
        remove_field => ["watched_video_keywords"]
        remove_field => ["watched_ad_keywords"]
      }
    }





    output {
        elasticsearch {
    	index => 'cyads_all_ads_log'
            hosts => [ "localhost:9200" ]
        }
    }
